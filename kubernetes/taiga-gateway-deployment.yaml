apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: taiga-gateway
  name: taiga-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: taiga-gateway
  strategy: {}
  template:
    metadata:
      annotations:
        app: taiga-gateway
      creationTimestamp: null
      labels:
        app: taiga-gateway
    spec:
      containers:
      - env:
        - name: SECRET_KEY
          valueFrom:
            configMapKeyRef:
              key: SECRET_KEY
              name: variables-env 
        image: nginx:1.19-alpine
        imagePullPolicy: ""
        name: taiga-gateway
        resources: {}
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          readOnly: true
          name: nginx-conf
        - mountPath: /taiga/static
          name: taiga-static-data
        - mountPath: /taiga/media
          name: taiga-media-data
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf 
          items:
            - key: default.conf
              path: default.conf
      - name: taiga-static-data
        persistentVolumeClaim:
          claimName: taiga-static-data
      - name: taiga-media-data
        persistentVolumeClaim:
          claimName: taiga-media-data          
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: taiga-gateway
  name: taiga-gateway
spec:
  ports:
  - name: "80"
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: taiga-gateway
